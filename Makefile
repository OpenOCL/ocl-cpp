# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

CASADI = ../../Software/casadi-osx-matlabR2014b-v3.3.0/include/
CASADI_LIB = ../../Software/casadi-osx-matlabR2014b-v3.3.0/

GTEST = ../googletest/googletest
GTEST_LIB = $(GTEST)/lib

SRC = ./src
INCLUDE = ./include
TEST = ./test
LIB = ./lib
EXTERN = ./extern

BIN = ./build/bin
OBJ = ./build/obj

# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST)/include -isystem $(CASADI)
CXXFLAGS += -g -Wall -Wextra -std=c++14 -Wno-ignored-attributes -Wfatal-errors

INCLUDES_EIGEN = -I $(EXTERN)/eigen
INCLUDES = -I$(SRC) -I$(INCLUDE)  $(INCLUDES_EIGEN) -I$(CASADI)

COMMON_HEADERS = $(SRC)/exceptions.h $(SRC)/typedefs.h

GTEST_STATIC = $(GTEST_LIB)/libgtest.a

LIB_O = $(OBJ)/NumericMatrix.o $(OBJ)/Tensor.o
TESTS = $(OBJ)/testTensor.o

GTEST_HEADERS = $(GTEST)/include/gtest/*.h \
                $(GTEST)/include/gtest/internal/*.h

all : $(GTEST_LIBS) $(LIB_O) $(TESTS) $(BIN)/testTensor
gtest: $(GTEST_LIBS)
clean:
	rm -f $(TESTS) $(OBJ)/*.o	$(LIB)/*.a
clean-all :
	rm -f $(GTEST_LIBS) $(TESTS) $(OBJ)/*.o $(LIB)/*.a


# Builds gtest.a and gtest_main.a.
GTEST_SRCS_ = $(GTEST)/src/*.cc $(GTEST)/src/*.h $(GTEST_HEADERS)
$(OBJ)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST) $(CXXFLAGS) -c \
            $(GTEST)/src/gtest-all.cc -o $@
$(OBJ)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST) $(CXXFLAGS) -c \
            $(GTEST)/src/gtest_main.cc -o $@
$(GTEST_LIB)/libgtest.a : $(OBJ)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^
$(GTEST_LIB)/libgtest_main.a : $(OBJ)/gtest-all.o $(OBJ)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# builds Eigen Tensor
$(OBJ)/NumericMatrix.o : $(SRC)/Matrix/NumericMatrix.cc $(SRC)/Matrix/NumericMatrix.h $(SRC)/Matrix/eigen.h $(COMMON_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ)/Tensor.o : $(SRC)/Tensor.cc $(SRC)/Tensor.h $(SRC)/Matrix/NumericMatrix.h $(SRC)/Matrix/SymbolicAdMatrix.h $(COMMON_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ)/testTensor.o : $(TEST)/testTensor.cc $(COMMON_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

$(BIN)/testTensor : $(OBJ)/NumericMatrix.o $(OBJ)/Tensor.o $(OBJ)/testTensor.o
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_LIB) -L$(CASADI_LIB) -lcasadi -lgtest_main  -lpthread $^ -o $@
