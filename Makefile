# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make clean  - removes files generated by make.
#   make clean-all  - removes all files generated by make, including gtest and binaries.
#
# Be sure to set the following PATH variables:
#
# export CASADI_INCLUDE=/path/to/casadi/include
# export CASADI_LIB=/path/to/casadi/
# export GTEST_INCLUDE=/path/to/gtest

CASADI_INCLUDE_PATH = ${CASADI_INCLUDE}
CASADI_LIB_PATH = ${CASADI_LIB}

GTEST_PATH = $(GTEST_INCLUDE)
GTEST_LIB = ./build/lib

SRC = ./src
INCLUDE = ./include
TEST = ./test
LIB = ./build/lib
EXTERN = ./extern

BIN = ./build/bin
OBJ = ./build/obj

CPPFLAGS += -isystem $(GTEST_PATH)/include -isystem $(CASADI_INCLUDE_PATH)
CXXFLAGS += -g -Wall -Wextra -std=c++11 -Wno-ignored-attributes -Wfatal-errors

GTEST_LIBS = $(GTEST_LIB)/libgtest.a $(GTEST_LIB)/libgtest_main.a

INCLUDES_EIGEN = -I $(EXTERN)/eigen
INCLUDES = -I$(SRC) -I$(TEST) -I$(INCLUDE) \
					 $(INCLUDES_EIGEN) -I$(CASADI_INCLUDE_PATH)

GTEST_STATIC = $(GTEST_LIB)/libgtest.a
GTEST_HEADERS = $(GTEST_PATH)/include/gtest/*.h \
                $(GTEST_PATH)/include/gtest/internal/*.h
GTEST_SRCS_ = $(GTEST_PATH)/src/*.cc $(GTEST_PATH)/src/*.h $(GTEST_HEADERS)

TESTS = $(BIN)/test_casadi $(BIN)/test_matrix $(BIN)/test_tensor
TESTS_O = $(OBJ)/test_casadi.o $(OBJ)/test_matrix.o $(OBJ)/test_tensor.o
COMMON_HEADERS = $(SRC)/exceptions.h $(SRC)/typedefs.h
TENSOR_HEADERS = $(SRC)/tensor/tensor.h $(SRC)/tensor/matrix.h $(SRC)/tensor/casadi.h

all: $(TESTS_O)
gtest: $(GTEST_LIBS)
clean:
	rm -f $(TESTS) $(OBJ)/*.o
clean-bin :
	rm -f build/bin/test_tensor
clean-all : clean-bin
	rm -f $(GTEST_LIBS) $(TESTS) $(OBJ)/*.o $(LIB)/*.a

# Rules for gtest.a and gtest_main.a.
$(OBJ)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_PATH) $(CXXFLAGS) -c \
            $(GTEST_PATH)/src/gtest-all.cc -o $@
$(OBJ)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_PATH) $(CXXFLAGS) -c \
            $(GTEST_PATH)/src/gtest_main.cc -o $@
$(GTEST_LIB)/libgtest.a : $(OBJ)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^
$(GTEST_LIB)/libgtest_main.a : $(OBJ)/gtest-all.o $(OBJ)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# tensor classes
$(OBJ)/test_casadi.o : $(TEST)/test_casadi.cc $(TENSOR_HEADERS) $(COMMON_HEADERS) $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ)/test_matrix.o : $(TEST)/test_matrix.cc $(TENSOR_HEADERS) $(COMMON_HEADERS) $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ)/test_tensor.o : $(TEST)/test_tensor.cc $(TENSOR_HEADERS) $(COMMON_HEADERS) $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

# binaries
# $(BIN)/test_casadi : $(OBJ)/test_casadi.o
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_LIB) -L$(CASADI_LIB_PATH) -lcasadi  -lgtest_main -lpthread -o $@ $^
#
# $(BIN)/test_matrix : $(OBJ)/test_matrix.o
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_LIB) -L$(CASADI_LIB_PATH) -lcasadi  -lgtest_main -lpthread -o $@ $^
#
# $(BIN)/test_tensor : $(OBJ)/test_tensor.o
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_LIB) -L$(CASADI_LIB_PATH) -lcasadi  -lgtest_main -lpthread -o $@ $^
